#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="lever_Deduplication")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Inserttb_login(tb_login instance);
  partial void Updatetb_login(tb_login instance);
  partial void Deletetb_login(tb_login instance);
  partial void Inserttb_user_registration(tb_user_registration instance);
  partial void Updatetb_user_registration(tb_user_registration instance);
  partial void Deletetb_user_registration(tb_user_registration instance);
  partial void Inserttb_auditor(tb_auditor instance);
  partial void Updatetb_auditor(tb_auditor instance);
  partial void Deletetb_auditor(tb_auditor instance);
  partial void Inserttb_filename_checking(tb_filename_checking instance);
  partial void Updatetb_filename_checking(tb_filename_checking instance);
  partial void Deletetb_filename_checking(tb_filename_checking instance);
  partial void Inserttb_sector(tb_sector instance);
  partial void Updatetb_sector(tb_sector instance);
  partial void Deletetb_sector(tb_sector instance);
  partial void Inserttb_filename_checking1(tb_filename_checking1 instance);
  partial void Updatetb_filename_checking1(tb_filename_checking1 instance);
  partial void Deletetb_filename_checking1(tb_filename_checking1 instance);
  partial void Inserttb_temp(tb_temp instance);
  partial void Updatetb_temp(tb_temp instance);
  partial void Deletetb_temp(tb_temp instance);
  partial void Insertdownload(download instance);
  partial void Updatedownload(download instance);
  partial void Deletedownload(download instance);
  partial void Inserttb_upload(tb_upload instance);
  partial void Updatetb_upload(tb_upload instance);
  partial void Deletetb_upload(tb_upload instance);
  partial void Inserttb_blocked_status(tb_blocked_status instance);
  partial void Updatetb_blocked_status(tb_blocked_status instance);
  partial void Deletetb_blocked_status(tb_blocked_status instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["lever_DeduplicationConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<tb_login> tb_logins
	{
		get
		{
			return this.GetTable<tb_login>();
		}
	}
	
	public System.Data.Linq.Table<tb_user_registration> tb_user_registrations
	{
		get
		{
			return this.GetTable<tb_user_registration>();
		}
	}
	
	public System.Data.Linq.Table<tb_auditor> tb_auditors
	{
		get
		{
			return this.GetTable<tb_auditor>();
		}
	}
	
	public System.Data.Linq.Table<tb_filename_checking> tb_filename_checkings
	{
		get
		{
			return this.GetTable<tb_filename_checking>();
		}
	}
	
	public System.Data.Linq.Table<tb_sector> tb_sectors
	{
		get
		{
			return this.GetTable<tb_sector>();
		}
	}
	
	public System.Data.Linq.Table<tb_filename_checking1> tb_filename_checking1s
	{
		get
		{
			return this.GetTable<tb_filename_checking1>();
		}
	}
	
	public System.Data.Linq.Table<tb_temp> tb_temps
	{
		get
		{
			return this.GetTable<tb_temp>();
		}
	}
	
	public System.Data.Linq.Table<download> downloads
	{
		get
		{
			return this.GetTable<download>();
		}
	}
	
	public System.Data.Linq.Table<tb_upload> tb_uploads
	{
		get
		{
			return this.GetTable<tb_upload>();
		}
	}
	
	public System.Data.Linq.Table<tb_blocked_status> tb_blocked_status
	{
		get
		{
			return this.GetTable<tb_blocked_status>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_login")]
public partial class tb_login : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _lid;
	
	private string _username;
	
	private string _password;
	
	private System.Nullable<int> _st;
	
	private string _utype;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlidChanging(int value);
    partial void OnlidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnstChanging(System.Nullable<int> value);
    partial void OnstChanged();
    partial void OnutypeChanging(string value);
    partial void OnutypeChanged();
    #endregion
	
	public tb_login()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int lid
	{
		get
		{
			return this._lid;
		}
		set
		{
			if ((this._lid != value))
			{
				this.OnlidChanging(value);
				this.SendPropertyChanging();
				this._lid = value;
				this.SendPropertyChanged("lid");
				this.OnlidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
	public string username
	{
		get
		{
			return this._username;
		}
		set
		{
			if ((this._username != value))
			{
				this.OnusernameChanging(value);
				this.SendPropertyChanging();
				this._username = value;
				this.SendPropertyChanged("username");
				this.OnusernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50)")]
	public string password
	{
		get
		{
			return this._password;
		}
		set
		{
			if ((this._password != value))
			{
				this.OnpasswordChanging(value);
				this.SendPropertyChanging();
				this._password = value;
				this.SendPropertyChanged("password");
				this.OnpasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_st", DbType="Int")]
	public System.Nullable<int> st
	{
		get
		{
			return this._st;
		}
		set
		{
			if ((this._st != value))
			{
				this.OnstChanging(value);
				this.SendPropertyChanging();
				this._st = value;
				this.SendPropertyChanged("st");
				this.OnstChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_utype", DbType="VarChar(50)")]
	public string utype
	{
		get
		{
			return this._utype;
		}
		set
		{
			if ((this._utype != value))
			{
				this.OnutypeChanging(value);
				this.SendPropertyChanging();
				this._utype = value;
				this.SendPropertyChanged("utype");
				this.OnutypeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_user_registration")]
public partial class tb_user_registration : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _uid;
	
	private string _fname;
	
	private string _lname;
	
	private string _username;
	
	private string _gender;
	
	private string _skey;
	
	private string _photo;
	
	private string _rdate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuidChanging(int value);
    partial void OnuidChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnskeyChanging(string value);
    partial void OnskeyChanged();
    partial void OnphotoChanging(string value);
    partial void OnphotoChanged();
    partial void OnrdateChanging(string value);
    partial void OnrdateChanged();
    #endregion
	
	public tb_user_registration()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int uid
	{
		get
		{
			return this._uid;
		}
		set
		{
			if ((this._uid != value))
			{
				this.OnuidChanging(value);
				this.SendPropertyChanging();
				this._uid = value;
				this.SendPropertyChanged("uid");
				this.OnuidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(50)")]
	public string fname
	{
		get
		{
			return this._fname;
		}
		set
		{
			if ((this._fname != value))
			{
				this.OnfnameChanging(value);
				this.SendPropertyChanging();
				this._fname = value;
				this.SendPropertyChanged("fname");
				this.OnfnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="VarChar(50)")]
	public string lname
	{
		get
		{
			return this._lname;
		}
		set
		{
			if ((this._lname != value))
			{
				this.OnlnameChanging(value);
				this.SendPropertyChanging();
				this._lname = value;
				this.SendPropertyChanged("lname");
				this.OnlnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
	public string username
	{
		get
		{
			return this._username;
		}
		set
		{
			if ((this._username != value))
			{
				this.OnusernameChanging(value);
				this.SendPropertyChanging();
				this._username = value;
				this.SendPropertyChanged("username");
				this.OnusernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(50)")]
	public string gender
	{
		get
		{
			return this._gender;
		}
		set
		{
			if ((this._gender != value))
			{
				this.OngenderChanging(value);
				this.SendPropertyChanging();
				this._gender = value;
				this.SendPropertyChanged("gender");
				this.OngenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skey", DbType="VarChar(50)")]
	public string skey
	{
		get
		{
			return this._skey;
		}
		set
		{
			if ((this._skey != value))
			{
				this.OnskeyChanging(value);
				this.SendPropertyChanging();
				this._skey = value;
				this.SendPropertyChanged("skey");
				this.OnskeyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo", DbType="VarChar(50)")]
	public string photo
	{
		get
		{
			return this._photo;
		}
		set
		{
			if ((this._photo != value))
			{
				this.OnphotoChanging(value);
				this.SendPropertyChanging();
				this._photo = value;
				this.SendPropertyChanged("photo");
				this.OnphotoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rdate", DbType="VarChar(50)")]
	public string rdate
	{
		get
		{
			return this._rdate;
		}
		set
		{
			if ((this._rdate != value))
			{
				this.OnrdateChanging(value);
				this.SendPropertyChanging();
				this._rdate = value;
				this.SendPropertyChanged("rdate");
				this.OnrdateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_auditor")]
public partial class tb_auditor : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _aid;
	
	private string _aname;
	
	private string _email;
	
	private string _phne;
	
	private string _photo;
	
	private string _rdate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnaidChanging(int value);
    partial void OnaidChanged();
    partial void OnanameChanging(string value);
    partial void OnanameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphneChanging(string value);
    partial void OnphneChanged();
    partial void OnphotoChanging(string value);
    partial void OnphotoChanged();
    partial void OnrdateChanging(string value);
    partial void OnrdateChanged();
    #endregion
	
	public tb_auditor()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int aid
	{
		get
		{
			return this._aid;
		}
		set
		{
			if ((this._aid != value))
			{
				this.OnaidChanging(value);
				this.SendPropertyChanging();
				this._aid = value;
				this.SendPropertyChanged("aid");
				this.OnaidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aname", DbType="VarChar(50)")]
	public string aname
	{
		get
		{
			return this._aname;
		}
		set
		{
			if ((this._aname != value))
			{
				this.OnanameChanging(value);
				this.SendPropertyChanging();
				this._aname = value;
				this.SendPropertyChanged("aname");
				this.OnanameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phne", DbType="VarChar(MAX)")]
	public string phne
	{
		get
		{
			return this._phne;
		}
		set
		{
			if ((this._phne != value))
			{
				this.OnphneChanging(value);
				this.SendPropertyChanging();
				this._phne = value;
				this.SendPropertyChanged("phne");
				this.OnphneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo", DbType="VarChar(MAX)")]
	public string photo
	{
		get
		{
			return this._photo;
		}
		set
		{
			if ((this._photo != value))
			{
				this.OnphotoChanging(value);
				this.SendPropertyChanging();
				this._photo = value;
				this.SendPropertyChanged("photo");
				this.OnphotoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rdate", DbType="VarChar(50)")]
	public string rdate
	{
		get
		{
			return this._rdate;
		}
		set
		{
			if ((this._rdate != value))
			{
				this.OnrdateChanging(value);
				this.SendPropertyChanging();
				this._rdate = value;
				this.SendPropertyChanged("rdate");
				this.OnrdateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_filename_checking")]
public partial class tb_filename_checking : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _fnid;
	
	private string _fname;
	
	private string _uploader;
	
	private string _count;
	
	private string _attepmt_date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfnidChanging(int value);
    partial void OnfnidChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnuploaderChanging(string value);
    partial void OnuploaderChanged();
    partial void OncountChanging(string value);
    partial void OncountChanged();
    partial void Onattepmt_dateChanging(string value);
    partial void Onattepmt_dateChanged();
    #endregion
	
	public tb_filename_checking()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fnid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int fnid
	{
		get
		{
			return this._fnid;
		}
		set
		{
			if ((this._fnid != value))
			{
				this.OnfnidChanging(value);
				this.SendPropertyChanging();
				this._fnid = value;
				this.SendPropertyChanged("fnid");
				this.OnfnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(50)")]
	public string fname
	{
		get
		{
			return this._fname;
		}
		set
		{
			if ((this._fname != value))
			{
				this.OnfnameChanging(value);
				this.SendPropertyChanging();
				this._fname = value;
				this.SendPropertyChanged("fname");
				this.OnfnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uploader", DbType="VarChar(50)")]
	public string uploader
	{
		get
		{
			return this._uploader;
		}
		set
		{
			if ((this._uploader != value))
			{
				this.OnuploaderChanging(value);
				this.SendPropertyChanging();
				this._uploader = value;
				this.SendPropertyChanged("uploader");
				this.OnuploaderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="VarChar(50)")]
	public string count
	{
		get
		{
			return this._count;
		}
		set
		{
			if ((this._count != value))
			{
				this.OncountChanging(value);
				this.SendPropertyChanging();
				this._count = value;
				this.SendPropertyChanged("count");
				this.OncountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attepmt_date", DbType="VarChar(50)")]
	public string attepmt_date
	{
		get
		{
			return this._attepmt_date;
		}
		set
		{
			if ((this._attepmt_date != value))
			{
				this.Onattepmt_dateChanging(value);
				this.SendPropertyChanging();
				this._attepmt_date = value;
				this.SendPropertyChanged("attepmt_date");
				this.Onattepmt_dateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_sector")]
public partial class tb_sector : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _sid;
	
	private string _uid;
	
	private string _fname;
	
	private string _sname;
	
	private string _shash;
	
	private string _ekey;
	
	private string _status;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsidChanging(int value);
    partial void OnsidChanged();
    partial void OnuidChanging(string value);
    partial void OnuidChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnsnameChanging(string value);
    partial void OnsnameChanged();
    partial void OnshashChanging(string value);
    partial void OnshashChanged();
    partial void OnekeyChanging(string value);
    partial void OnekeyChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
	
	public tb_sector()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int sid
	{
		get
		{
			return this._sid;
		}
		set
		{
			if ((this._sid != value))
			{
				this.OnsidChanging(value);
				this.SendPropertyChanging();
				this._sid = value;
				this.SendPropertyChanged("sid");
				this.OnsidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="VarChar(50)")]
	public string uid
	{
		get
		{
			return this._uid;
		}
		set
		{
			if ((this._uid != value))
			{
				this.OnuidChanging(value);
				this.SendPropertyChanging();
				this._uid = value;
				this.SendPropertyChanged("uid");
				this.OnuidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(50)")]
	public string fname
	{
		get
		{
			return this._fname;
		}
		set
		{
			if ((this._fname != value))
			{
				this.OnfnameChanging(value);
				this.SendPropertyChanging();
				this._fname = value;
				this.SendPropertyChanged("fname");
				this.OnfnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sname", DbType="VarChar(50)")]
	public string sname
	{
		get
		{
			return this._sname;
		}
		set
		{
			if ((this._sname != value))
			{
				this.OnsnameChanging(value);
				this.SendPropertyChanging();
				this._sname = value;
				this.SendPropertyChanged("sname");
				this.OnsnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shash", DbType="VarChar(MAX)")]
	public string shash
	{
		get
		{
			return this._shash;
		}
		set
		{
			if ((this._shash != value))
			{
				this.OnshashChanging(value);
				this.SendPropertyChanging();
				this._shash = value;
				this.SendPropertyChanged("shash");
				this.OnshashChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ekey", DbType="VarChar(50)")]
	public string ekey
	{
		get
		{
			return this._ekey;
		}
		set
		{
			if ((this._ekey != value))
			{
				this.OnekeyChanging(value);
				this.SendPropertyChanging();
				this._ekey = value;
				this.SendPropertyChanged("ekey");
				this.OnekeyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(50)")]
	public string status
	{
		get
		{
			return this._status;
		}
		set
		{
			if ((this._status != value))
			{
				this.OnstatusChanging(value);
				this.SendPropertyChanging();
				this._status = value;
				this.SendPropertyChanged("status");
				this.OnstatusChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_filename_checking")]
public partial class tb_filename_checking1 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _fnid;
	
	private string _fname;
	
	private string _uploader;
	
	private string _count;
	
	private string _attepmt_date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfnidChanging(int value);
    partial void OnfnidChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnuploaderChanging(string value);
    partial void OnuploaderChanged();
    partial void OncountChanging(string value);
    partial void OncountChanged();
    partial void Onattepmt_dateChanging(string value);
    partial void Onattepmt_dateChanged();
    #endregion
	
	public tb_filename_checking1()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fnid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int fnid
	{
		get
		{
			return this._fnid;
		}
		set
		{
			if ((this._fnid != value))
			{
				this.OnfnidChanging(value);
				this.SendPropertyChanging();
				this._fnid = value;
				this.SendPropertyChanged("fnid");
				this.OnfnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(50)")]
	public string fname
	{
		get
		{
			return this._fname;
		}
		set
		{
			if ((this._fname != value))
			{
				this.OnfnameChanging(value);
				this.SendPropertyChanging();
				this._fname = value;
				this.SendPropertyChanged("fname");
				this.OnfnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uploader", DbType="VarChar(50)")]
	public string uploader
	{
		get
		{
			return this._uploader;
		}
		set
		{
			if ((this._uploader != value))
			{
				this.OnuploaderChanging(value);
				this.SendPropertyChanging();
				this._uploader = value;
				this.SendPropertyChanged("uploader");
				this.OnuploaderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="VarChar(50)")]
	public string count
	{
		get
		{
			return this._count;
		}
		set
		{
			if ((this._count != value))
			{
				this.OncountChanging(value);
				this.SendPropertyChanging();
				this._count = value;
				this.SendPropertyChanged("count");
				this.OncountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attepmt_date", DbType="VarChar(50)")]
	public string attepmt_date
	{
		get
		{
			return this._attepmt_date;
		}
		set
		{
			if ((this._attepmt_date != value))
			{
				this.Onattepmt_dateChanging(value);
				this.SendPropertyChanging();
				this._attepmt_date = value;
				this.SendPropertyChanged("attepmt_date");
				this.Onattepmt_dateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_temp")]
public partial class tb_temp : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ffid;
	
	private string _sname;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnffidChanging(int value);
    partial void OnffidChanged();
    partial void OnsnameChanging(string value);
    partial void OnsnameChanged();
    #endregion
	
	public tb_temp()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ffid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ffid
	{
		get
		{
			return this._ffid;
		}
		set
		{
			if ((this._ffid != value))
			{
				this.OnffidChanging(value);
				this.SendPropertyChanging();
				this._ffid = value;
				this.SendPropertyChanged("ffid");
				this.OnffidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sname", DbType="VarChar(50)")]
	public string sname
	{
		get
		{
			return this._sname;
		}
		set
		{
			if ((this._sname != value))
			{
				this.OnsnameChanging(value);
				this.SendPropertyChanging();
				this._sname = value;
				this.SendPropertyChanged("sname");
				this.OnsnameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.download")]
public partial class download : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _did;
	
	private string _dname;
	
	private string _fname;
	
	private System.Nullable<int> _download1;
	
	private System.Nullable<int> _failed;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndidChanging(int value);
    partial void OndidChanged();
    partial void OndnameChanging(string value);
    partial void OndnameChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void Ondownload1Changing(System.Nullable<int> value);
    partial void Ondownload1Changed();
    partial void OnfailedChanging(System.Nullable<int> value);
    partial void OnfailedChanged();
    #endregion
	
	public download()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_did", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int did
	{
		get
		{
			return this._did;
		}
		set
		{
			if ((this._did != value))
			{
				this.OndidChanging(value);
				this.SendPropertyChanging();
				this._did = value;
				this.SendPropertyChanged("did");
				this.OndidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dname", DbType="VarChar(50)")]
	public string dname
	{
		get
		{
			return this._dname;
		}
		set
		{
			if ((this._dname != value))
			{
				this.OndnameChanging(value);
				this.SendPropertyChanging();
				this._dname = value;
				this.SendPropertyChanged("dname");
				this.OndnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(50)")]
	public string fname
	{
		get
		{
			return this._fname;
		}
		set
		{
			if ((this._fname != value))
			{
				this.OnfnameChanging(value);
				this.SendPropertyChanging();
				this._fname = value;
				this.SendPropertyChanged("fname");
				this.OnfnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="download", Storage="_download1", DbType="Int")]
	public System.Nullable<int> download1
	{
		get
		{
			return this._download1;
		}
		set
		{
			if ((this._download1 != value))
			{
				this.Ondownload1Changing(value);
				this.SendPropertyChanging();
				this._download1 = value;
				this.SendPropertyChanged("download1");
				this.Ondownload1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_failed", DbType="Int")]
	public System.Nullable<int> failed
	{
		get
		{
			return this._failed;
		}
		set
		{
			if ((this._failed != value))
			{
				this.OnfailedChanging(value);
				this.SendPropertyChanging();
				this._failed = value;
				this.SendPropertyChanged("failed");
				this.OnfailedChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_upload")]
public partial class tb_upload : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _fid;
	
	private string _filename;
	
	private string _description;
	
	private string _upload_by;
	
	private string _upload_date;
	
	private string _date;
	
	private string _duplicated_st;
	
	private string _hash;
	
	private string _duplicated_parts;
	
	private string _non_duplicated_parts;
	
	private string _splited_hashes;
	
	private string _ext;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfidChanging(int value);
    partial void OnfidChanged();
    partial void OnfilenameChanging(string value);
    partial void OnfilenameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onupload_byChanging(string value);
    partial void Onupload_byChanged();
    partial void Onupload_dateChanging(string value);
    partial void Onupload_dateChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    partial void Onduplicated_stChanging(string value);
    partial void Onduplicated_stChanged();
    partial void OnhashChanging(string value);
    partial void OnhashChanged();
    partial void Onduplicated_partsChanging(string value);
    partial void Onduplicated_partsChanged();
    partial void Onnon_duplicated_partsChanging(string value);
    partial void Onnon_duplicated_partsChanged();
    partial void Onsplited_hashesChanging(string value);
    partial void Onsplited_hashesChanged();
    partial void OnextChanging(string value);
    partial void OnextChanged();
    #endregion
	
	public tb_upload()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int fid
	{
		get
		{
			return this._fid;
		}
		set
		{
			if ((this._fid != value))
			{
				this.OnfidChanging(value);
				this.SendPropertyChanging();
				this._fid = value;
				this.SendPropertyChanged("fid");
				this.OnfidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filename", DbType="VarChar(50)")]
	public string filename
	{
		get
		{
			return this._filename;
		}
		set
		{
			if ((this._filename != value))
			{
				this.OnfilenameChanging(value);
				this.SendPropertyChanging();
				this._filename = value;
				this.SendPropertyChanged("filename");
				this.OnfilenameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(50)")]
	public string description
	{
		get
		{
			return this._description;
		}
		set
		{
			if ((this._description != value))
			{
				this.OndescriptionChanging(value);
				this.SendPropertyChanging();
				this._description = value;
				this.SendPropertyChanged("description");
				this.OndescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upload_by", DbType="VarChar(50)")]
	public string upload_by
	{
		get
		{
			return this._upload_by;
		}
		set
		{
			if ((this._upload_by != value))
			{
				this.Onupload_byChanging(value);
				this.SendPropertyChanging();
				this._upload_by = value;
				this.SendPropertyChanged("upload_by");
				this.Onupload_byChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upload_date", DbType="VarChar(50)")]
	public string upload_date
	{
		get
		{
			return this._upload_date;
		}
		set
		{
			if ((this._upload_date != value))
			{
				this.Onupload_dateChanging(value);
				this.SendPropertyChanging();
				this._upload_date = value;
				this.SendPropertyChanged("upload_date");
				this.Onupload_dateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="VarChar(50)")]
	public string date
	{
		get
		{
			return this._date;
		}
		set
		{
			if ((this._date != value))
			{
				this.OndateChanging(value);
				this.SendPropertyChanging();
				this._date = value;
				this.SendPropertyChanged("date");
				this.OndateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duplicated_st", DbType="VarChar(50)")]
	public string duplicated_st
	{
		get
		{
			return this._duplicated_st;
		}
		set
		{
			if ((this._duplicated_st != value))
			{
				this.Onduplicated_stChanging(value);
				this.SendPropertyChanging();
				this._duplicated_st = value;
				this.SendPropertyChanged("duplicated_st");
				this.Onduplicated_stChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hash", DbType="VarChar(50)")]
	public string hash
	{
		get
		{
			return this._hash;
		}
		set
		{
			if ((this._hash != value))
			{
				this.OnhashChanging(value);
				this.SendPropertyChanging();
				this._hash = value;
				this.SendPropertyChanged("hash");
				this.OnhashChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duplicated_parts", DbType="VarChar(MAX)")]
	public string duplicated_parts
	{
		get
		{
			return this._duplicated_parts;
		}
		set
		{
			if ((this._duplicated_parts != value))
			{
				this.Onduplicated_partsChanging(value);
				this.SendPropertyChanging();
				this._duplicated_parts = value;
				this.SendPropertyChanged("duplicated_parts");
				this.Onduplicated_partsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_non_duplicated_parts", DbType="VarChar(50)")]
	public string non_duplicated_parts
	{
		get
		{
			return this._non_duplicated_parts;
		}
		set
		{
			if ((this._non_duplicated_parts != value))
			{
				this.Onnon_duplicated_partsChanging(value);
				this.SendPropertyChanging();
				this._non_duplicated_parts = value;
				this.SendPropertyChanged("non_duplicated_parts");
				this.Onnon_duplicated_partsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_splited_hashes", DbType="VarChar(MAX)")]
	public string splited_hashes
	{
		get
		{
			return this._splited_hashes;
		}
		set
		{
			if ((this._splited_hashes != value))
			{
				this.Onsplited_hashesChanging(value);
				this.SendPropertyChanging();
				this._splited_hashes = value;
				this.SendPropertyChanged("splited_hashes");
				this.Onsplited_hashesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ext", DbType="VarChar(50)")]
	public string ext
	{
		get
		{
			return this._ext;
		}
		set
		{
			if ((this._ext != value))
			{
				this.OnextChanging(value);
				this.SendPropertyChanging();
				this._ext = value;
				this.SendPropertyChanged("ext");
				this.OnextChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_blocked_status")]
public partial class tb_blocked_status : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _bid;
	
	private string _username;
	
	private string _bst;
	
	private string _date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbidChanging(int value);
    partial void OnbidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnbstChanging(string value);
    partial void OnbstChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    #endregion
	
	public tb_blocked_status()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int bid
	{
		get
		{
			return this._bid;
		}
		set
		{
			if ((this._bid != value))
			{
				this.OnbidChanging(value);
				this.SendPropertyChanging();
				this._bid = value;
				this.SendPropertyChanged("bid");
				this.OnbidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
	public string username
	{
		get
		{
			return this._username;
		}
		set
		{
			if ((this._username != value))
			{
				this.OnusernameChanging(value);
				this.SendPropertyChanging();
				this._username = value;
				this.SendPropertyChanged("username");
				this.OnusernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bst", DbType="VarChar(50)")]
	public string bst
	{
		get
		{
			return this._bst;
		}
		set
		{
			if ((this._bst != value))
			{
				this.OnbstChanging(value);
				this.SendPropertyChanging();
				this._bst = value;
				this.SendPropertyChanged("bst");
				this.OnbstChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="VarChar(50)")]
	public string date
	{
		get
		{
			return this._date;
		}
		set
		{
			if ((this._date != value))
			{
				this.OndateChanging(value);
				this.SendPropertyChanging();
				this._date = value;
				this.SendPropertyChanged("date");
				this.OndateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
